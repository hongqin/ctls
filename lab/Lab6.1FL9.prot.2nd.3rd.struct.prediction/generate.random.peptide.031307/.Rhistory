read.table("chou.fasman.table.txt");
read.csv("chou.fasman.table.txt",header=T);
tb = read.csv("chou.fasman.table.txt",header=T);
tb
str(tb)
tb = read.csv("chou.fasman.table.txt",header=T);
str(tb)
tb
tb = read.csv("chou.fasman.table.txt",header=T);
tb
tb = read.csv("chou.fasman.table.txt",header=T);
tb
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
pos = seq(1:len);
out = data.frame( pos);
pos
out
runif
?runif
aa.h = tb$AA[tb$favor=="H"]
aa.E = tb$AA[tb$favor=="E"]
aa.T = c( tb$AA[tb$favor=="T"], "R");
aa.h
aa.E
aa.T
aa.h = tb$letter[tb$favor=="H"]
aa.E = tb$letter[tb$favor=="E"]
aa.T = c( tb$letter[tb$favor=="T"], "R");
aa.h
aa.E
aa.T
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.h = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.T = c( as.character( tb$letter[tb$favor=="T"] ), "R");
aa.h
aa.E
aa.T
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.h = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.C = c( as.character( tb$letter[tb$favor=="T"] ), "R");
aa.C
aa.h
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.H = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.C = c( as.character( tb$letter[tb$favor=="T"] ), "R");
aa.H
aa.E
aa.C
runif(5);
runif(5)*5
runif(5)*5
round( runif(5)*5 )
round( runif(5)*5 )
round( runif(5)*5 )
seq.tmp = data.frame( pos);
#generate coil-helix-coil
h.start = 5;
h.end  = 35;
round( runif(5)*5 )
set.tmp
letter
letters
?vector
seq.tmp = vector(len, mode="character");
#generate coil-helix-coil
h.start = 5;
h.end  = 35;
round( runif(5)*5 )
seq.tmp
set.tmp[1:h.start] = aa.H[round( runif( h.start) * h.start ) ]
seq.tmp[1:h.start] = aa.H[round( runif( h.start) * h.start ) ]
seq.tmp
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.H = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.C = c( as.character( tb$letter[tb$favor=="T"] ), "R");
pos = seq(1:len);
#generate coil-helix-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
round( runif(5)*5 )
seq.tmp = vector(len, mode="character");
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (h.start-1) ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) * h.len ) ]
seq.tmp[(h.end-1):len] = aa.C[round( runif( (len-h.end)) * (len - h.end) ) ]
seq.tmp
seq.tmp = vector(len, mode="character");
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * length(aa.C)  ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  length(aa.H) ) ]
seq.tmp[(h.end-1):len] = aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
seq.tmp
aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
seq.tmp[(h.end-1):len]
h.end:len
h.end:len
seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end-1)) * length(aa.C) ) ]
(h.end+1):len
round( runif( (len-h.end-1)) * length(aa.C) )
aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
seq.tmp = vector(len, mode="character");
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start)) * length(aa.C)  ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  length(aa.H) ) ]
seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * length(aa.C)  ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  length(aa.H) ) ]
seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
seq.tmp
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * length(aa.C)  ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  length(aa.H) ) ]
seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
 seq.tmp[(h.end+1):len]
aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
len-h.end
length(aa.C)
runif( (len-h.end)) 
round( runif( (len-h.end)) * length(aa.C) )
aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
aa.C[round( runif( (len-h.end)) * length(aa.C) ) ]
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  (length(aa.H)-1) + 1 ) ]
seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.H = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.C = c( as.character( tb$letter[tb$favor=="T"] ), "R");
pos = seq(1:len);
#generate coil-helix-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
round( runif(5)*5 )
seq.tmp = vector(len, mode="character");
seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  (length(aa.H)-1) + 1 ) ]
seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
seq.tmp
?paste
seq = paste(seq.tmp)
seq
seq = paste(seq.tmp, sep="")
seq
seq = paste(seq.tmp, sep="", collapse=T)
seq = paste(seq.tmp, sep="", collapse="")
seq
length(seq)
seq = paste(seq.tmp, sep="", collapse="")
seq
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
iterations = 30;
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.H = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.C = c( as.character( tb$letter[tb$favor=="T"] ), "R");
pos = seq(1:len);
#generate coil-helix-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
out.helix = vector(iterations, mode="character");
for( i in iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  (length(aa.H)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.helix[i] = seq;
}
out.helix
out.helix = vector(iterations, mode="character");
for( i in 1:iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  (length(aa.H)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.helix[i] = seq;
}
out.helix
?write.table
for( i in 1:iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  (length(aa.H)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.helix[i] = seq;
}
write.table( out.helix, "coil.helix.coil.40aa.txt");
write.table( out.helix, "coil.helix.coil.40aa.txt", quote=F, col.name=F);
###############3
#generate coil-sheet-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
out.sheet = vector(iterations, mode="character");
for( i in 1:iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.E[round( runif( h.len) *  (length(aa.E)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.helix[i] = seq;
}
write.table( out.sheet, "coil.sheet.coil.40aa.txt", quote=F, col.name=F);
 seq.tmp[ h.start: h.end ] = aa.E[round( runif( h.len) *  (length(aa.E)-1) + 1 ) ]
seq.tmp
###############3
#generate coil-sheet-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
out.sheet = vector(iterations, mode="character");
for( i in 1:iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.E[round( runif( h.len) *  (length(aa.E)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.sheet[i] = seq;
}
write.table( out.sheet, "coil.sheet.coil.40aa.txt", quote=F, col.name=F);
out.sheet
#031107Tue Hong Qin Generate random peptide for student's assignment
rm(list=ls());
len = 40;  ## 40 amino acid
iterations = 30;
tb = read.csv("chou.fasman.table.txt",header=T);  ##read in Chou Fasman table
aa.H = as.character( tb$letter[tb$favor=="H"] )
aa.E = as.character( tb$letter[tb$favor=="E"] )
aa.C = c( as.character( tb$letter[tb$favor=="T"] ), "R");
pos = seq(1:len);
#generate coil-helix-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
out.helix = vector(iterations, mode="character");
for( i in 1:iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.H[round( runif( h.len) *  (length(aa.H)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.helix[i] = seq;
}
write.table( out.helix, "coil.helix.coil.40aa.txt", quote=F, col.name=F);
###############3
#generate coil-sheet-coil
h.start = 5;
h.end  = 35;
h.len = (h.end - h.start) + 1;
out.sheet = vector(iterations, mode="character");
for( i in 1:iterations ) {
 seq.tmp = vector(len, mode="character");
 seq.tmp[1:(h.start-1)] = aa.C[round( runif( (h.start-1)) * (length(aa.C)-1) + 1 ) ]
 seq.tmp[ h.start: h.end ] = aa.E[round( runif( h.len) *  (length(aa.E)-1) + 1 ) ]
 seq.tmp[(h.end+1):len] = aa.C[round( runif( (len-h.end)) * (length(aa.C)-1) + 1 ) ]
 seq = paste(seq.tmp, sep="", collapse="")
 out.sheet[i] = seq;
}
write.table( out.sheet, "coil.sheet.coil.40aa.txt", quote=F, col.name=F);
